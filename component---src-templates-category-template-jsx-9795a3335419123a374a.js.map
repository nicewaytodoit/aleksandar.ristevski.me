{"version":3,"sources":["webpack:///./src/components/CategoryTemplateDetails/index.jsx","webpack:///./src/templates/category-template.jsx","webpack:///./src/utils/helpers.js","webpack:///./src/components/Post/index.jsx"],"names":["CategoryTemplateDetails","render","items","props","this","category","pageContext","data","allMarkdownRemark","edges","forEach","post","push","react_default","a","createElement","Post","key","node","fields","slug","className","React","Component","CategoryTemplate","_this$props","title","site","siteMetadata","Layout","Helmet_default","Sidebar","components_CategoryTemplateDetails","pageQuery","formatReadingTime","minutes","cups","Math","round","Array","fill","join","_data$node$frontmatte","frontmatter","date","description","page","_data$node$fields","categorySlug","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","style","display","timeToRead"],"mappings":"2LA0BeA,4FAtBbC,OAAA,WACE,IAAMC,EAAQ,GACNC,EAAUC,KAAVD,MACAE,EAAaF,EAAMG,YAAnBD,SAMR,OALcF,EAAMI,KAAKC,kBAAkBC,MACrCC,QAAQ,SAAAC,GACZT,EAAMU,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMT,KAAMI,EAAMM,IAAKN,EAAKO,KAAKC,OAAOC,UAInDP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,eAAehB,GAC7BQ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cAAcnB,UAfHoB,IAAMC,uDCItCC,4FACJvB,OAAA,WAAS,IAAAwB,EACuBrB,KAAKD,MAA3BI,EADDkB,EACClB,KAAMD,EADPmB,EACOnB,YACNoB,EAAUnB,EAAKoB,KAAKC,aAApBF,MACArB,EAAaC,EAAbD,SAER,OACEQ,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQY,MAAUrB,EAAL,MAAmBqB,IAChCb,EAAAC,EAAAC,cAACgB,EAAA,EAAY3B,KAAKD,OAClBU,EAAAC,EAAAC,cAACiB,EAA4B5B,KAAKD,aAXbmB,IAAMC,WAoBxBU,GAFET,YAEO,uFC1Bf,SAASU,EAAkBC,GAChC,IAAMC,EAAOC,KAAKC,MAAMH,EAAU,GAClC,OAAU,IAAII,MAAMH,GAAQ,GAAGI,KAAK,MAAMC,KAAK,IAA/C,IAAsDN,EAAtD,+HCGInB,4FACJf,OAAA,WAAS,IACCM,EAASH,KAAKD,MAAdI,KADDmC,EAOHnC,EAAKW,KAAKyB,YAJZjB,EAHKgB,EAGLhB,MACAkB,EAJKF,EAILE,KACAvC,EALKqC,EAKLrC,SACAwC,EANKH,EAMLG,YAEIC,EAAOvC,EAAKW,KARX6B,EAUwBxC,EAAKW,KAAKC,OAAjCC,EAVD2B,EAUC3B,KAAM4B,EAVPD,EAUOC,aAEd,OACEC,EAAAnC,EAAAC,cAAA,OAAKM,UAAU,QACb4B,EAAAnC,EAAAC,cAAA,OAAKM,UAAU,cACb4B,EAAAnC,EAAAC,cAAA,QACEM,UAAU,kBACV6B,SAAUC,IAAOP,GAAMQ,OAAO,iBAE7BD,IAAOP,GAAMQ,OAAO,cAEvBH,EAAAnC,EAAAC,cAAA,QAAMM,UAAU,uBAChB4B,EAAAnC,EAAAC,cAAA,QAAMM,UAAU,sBAAsBJ,IAAK+B,GACzCC,EAAAnC,EAAAC,cAACsC,EAAA,KAAD,CAAMC,GAAIN,EAAc3B,UAAU,4BAC/BhB,KAIP4C,EAAAnC,EAAAC,cAAA,MAAIM,UAAU,eACZ4B,EAAAnC,EAAAC,cAACsC,EAAA,KAAD,CAAMhC,UAAU,mBAAmBiC,GAAIlC,GACpCM,IAGLuB,EAAAnC,EAAAC,cAAA,KACEwC,MAAO,CAELC,QAAS,UAKVZ,EARH,MASSV,YAAkBY,EAAKW,aAEhCR,EAAAnC,EAAAC,cAAA,KAAGM,UAAU,qBAAqBwB,GAClCI,EAAAnC,EAAAC,cAACsC,EAAA,KAAD,CAAMhC,UAAU,iBAAiBiC,GAAIlC,GAArC,aA9CWE,IAAMC,WAsDVP","file":"component---src-templates-category-template-jsx-9795a3335419123a374a.js","sourcesContent":["import React from 'react';\nimport Post from '../Post';\n\nclass CategoryTemplateDetails extends React.Component {\n  render() {\n    const items = [];\n    const { props } = this;\n    const { category } = props.pageContext;\n    const posts = props.data.allMarkdownRemark.edges;\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />);\n    });\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">{category}</h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CategoryTemplateDetails;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport CategoryTemplateDetails from '../components/CategoryTemplateDetails';\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props;\n    const { title } = data.site.siteMetadata;\n    const { category } = pageContext;\n\n    return (\n      <Layout>\n        <div>\n          <Helmet title={`${category} - ${title}`} />\n          <Sidebar {...this.props} />\n          <CategoryTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default CategoryTemplate;\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n          title\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable import/prefer-default-export */\nexport function formatReadingTime(minutes) {\n  const cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport './style.scss';\nimport { formatReadingTime } from '../../utils/helpers';\n\nclass Post extends React.Component {\n  render() {\n    const { data } = this.props;\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = data.node.frontmatter;\n    const page = data.node;\n    // console.log('@@@', data);\n    const { slug, categorySlug } = data.node.fields;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p\n          style={{\n            // ...scale(-1 / 5),\n            display: 'block',\n            // marginBottom: rhythm(1),\n            // marginTop: rhythm(-1),\n          }}\n        >\n          {date}\n          {` • ${formatReadingTime(page.timeToRead)}`}\n        </p>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n"],"sourceRoot":""}