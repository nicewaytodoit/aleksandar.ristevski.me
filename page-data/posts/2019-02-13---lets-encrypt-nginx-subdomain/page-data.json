{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/2019-02-13---lets-encrypt-nginx-subdomain/","result":{"data":{"site":{"siteMetadata":{"title":"Blog & Profile by Aleksandar Ristevski","subtitle":"Any sufficiently advanced technology is indistinguishable from magic.","copyright":"All rights reserved <br> Copyright © 2018 - 2021","author":{"name":"Aleksandar Ristevski","twitter":"@nicewaytodoit"},"disqusShortname":"","siteUrl":"https://nicewaytodoit.github.io/aleksandar.ristevski.me"}},"markdownRemark":{"id":"628d50f6-e4c7-51bf-a399-ea61624109e9","html":"<p>As on my server there was already installed version of the <code class=\"language-text\">letsencrypt</code> and <code class=\"language-text\">certbot</code>, that helps installing certificate, I tried following command first:  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> letsencrypt certonly -a webroot --webroot-path<span class=\"token operator\">=</span>/var/www/ristevski.me/ -d *.ristevski.me</code></pre></div>\n<p>And got the following error:<br>\n“Client with the currently selected authenticator does not support any combination of challenges that will satisfy the CA.\nYou may need to use an authenticator plugin that can do challenges over DNS.”</p>\n<p><strong>Solution:</strong>\nFirst we need to check what is the installed version of the Certbot:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ certbot --version <span class=\"token operator\">||</span> /path/to/certbot-auto --version</code></pre></div>\n<p>In my case, it was version 0.27 so I need to upgrade Certbot first. It is best to go to <a href=\"https://certbot.eff.org/\">https://certbot.eff.org/</a> and check instructions for your OS and web server I am using AWS EC2 Ubuntu 18.04 and Nginx.</p>\n<p>In addition to an old version I had <code class=\"language-text\">certbot</code> installed both with apt-get and snap, so it was necessary to remove both versions.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> core<span class=\"token punctuation\">;</span> <span class=\"token function\">sudo</span> snap refresh core\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove certbot\n$ <span class=\"token function\">sudo</span> snap remove certbot</code></pre></div>\n<p>Then, installing new version in this case using snap. The second step to create a hard link in <code class=\"language-text\">snap</code> case is necessary, as it will make <code class=\"language-text\">certbot</code> available. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo snap install --classic certbot\n$ sudo ln -s /snap/bin/certbot /usr/bin/certbot </code></pre></div>\n<p>After try running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ certbot --version</code></pre></div>\n<p>If everything is ok, you will get installed <code class=\"language-text\">certbot</code> version.</p>\n<p>For <code class=\"language-text\">ristevski.me</code> domain I want to install a wildcard certificate, and for that type of certificate LetsEncrypt accepts only the DNS-01 challenge read more <a href=\"https://letsencrypt.org/docs/challenge-types/\">here</a>. </p>\n<p>To install a certificate we will choose to run the certbot in the manual mode.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> certbot certonly --manual </code></pre></div>\n<p>The prompt will ask to enter the domain, so in our case:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*.ristevski.me</code></pre></div>\n<p>and press enter, at this point the <code class=\"language-text\">certbot</code> will generate a code. We should not press enter, before we confirm that DNS records were updated.\nSo, we need to open got to GoDaddy, Namecheap, HostGator, 123-reg.co.uk or whatever else is our domain provider/registrar, and update DNS records adding TXT as suggested by the certbot. </p>\n<p>In my case that was:   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">type: TXT \nname: _acme-challenge\ncontent: Oa4uYiiR3kDJrFQR5j1ihP5sjlI_TdDdc8-h4Kgd_5E \ntime: 15 Minutes</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Before continuing, verify the record is deployed.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nPress Enter to Continue</code></pre></div>\n<p>Note: Please mind the message, and do not press enter until you confirm DNS records are updated. So, type:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">dig</span> -t txt _acme-challenge.ristevski.me</code></pre></div>\n<p>And check that TXT is the same, as on in the cerbot, sometimes an update can take a bit longer, between 5 and 20 minutes depending on DNS settings and propagation of the records.</p>\n<p>After confirming that records are the same proceed by pressing enter, and you will get the following message.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Waiting <span class=\"token keyword\">for</span> verification<span class=\"token punctuation\">..</span>.\nCleaning up challenges\n\nIMPORTANT NOTES:\n - Congratulations<span class=\"token operator\">!</span> Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/ristevski.me/fullchain.pem\n   Your key <span class=\"token function\">file</span> has been saved at:\n   /etc/letsencrypt/live/ristevski.me/privkey.pem\n   Your cert will expire on <span class=\"token number\">2021</span>-04-01. To obtain a new or tweaked version \n   of this certificate <span class=\"token keyword\">in</span> the future, simply run certbot again. \n   To non-interactively renew *all* of your certificates, run\n   <span class=\"token string\">\"certbot renew\"</span>\n - If you like Certbot, please consider supporting our work by:\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le</code></pre></div>\n<p>After getting success message only left is to adjust Nginx config file.\nSo use your favorite editor and edit nginx config file you have made previously for <code class=\"language-text\">http</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">nano</span> /etc/nginx/sites-available/ristevski.nginx.config</code></pre></div>\n<p>So, the configuration file for <code class=\"language-text\">aleksandar.ristevski.me</code> subdomain should look something like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">listen</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">server_name</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>ristevski<span class=\"token punctuation\">.</span>me<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token number\">301</span> <span class=\"token keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token variable\">$host</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">listen</span> <span class=\"token number\">443</span> <span class=\"token keyword\">ssl</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">listen</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token number\">443</span> <span class=\"token keyword\">ssl</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">server_name</span> aleksandar<span class=\"token punctuation\">.</span>ristevski<span class=\"token punctuation\">.</span>me<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">ssl_certificate</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span>live<span class=\"token operator\">/</span>ristevski<span class=\"token punctuation\">.</span>me<span class=\"token operator\">/</span>fullchain<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">ssl_certificate_key</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>letsencrypt<span class=\"token operator\">/</span>live<span class=\"token operator\">/</span>ristevski<span class=\"token punctuation\">.</span>me<span class=\"token operator\">/</span>privkey<span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">ssl_protocols</span> TLSv1 TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">1</span> TLSv1<span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">ssl_ciphers</span>  HIH<span class=\"token punctuation\">:</span><span class=\"token operator\">!</span>aNULL<span class=\"token punctuation\">:</span><span class=\"token operator\">!</span>MD5<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">access_log</span> <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>ar<span class=\"token punctuation\">.</span>ristevski<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">error_log</span> <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>ar<span class=\"token punctuation\">.</span>ristevski<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>log error<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>aleksandar<span class=\"token punctuation\">.</span>ristevski<span class=\"token punctuation\">.</span>me<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">index</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token operator\">=</span><span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">error_page</span> <span class=\"token number\">404</span> <span class=\"token operator\">/</span><span class=\"token number\">404.</span>html<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">location</span> <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token number\">404.</span>html <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">internal</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lastly, as Let’s Encrypt certificate expire every 3 months, we need to set up a renewal procedure with the <code class=\"language-text\">cron</code> job.</p>\n<p>First, let’s do the test that renewal is working.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo certbot renew --dry-run</code></pre></div>\n<p>If the test succeeds then we may create a <code class=\"language-text\">cron</code> job that will run a renewal script in specified times.</p>","fields":{"tagSlugs":["/tags/letsencrypt/","/tags/certificate/","/tags/installation/","/tags/maintenance/","/tags/nginx/","/tags/errors/"]},"timeToRead":4,"frontmatter":{"title":"Let's Encrypt Nginx Subdomain","tags":["letsencrypt","certificate","installation","maintenance","nginx","errors"],"date":"2019-02-13T13:27:33.158","description":"Installing certificate can sometimes get a wrong turn, I hope this article can help just a bit."}}},"pageContext":{"slug":"/posts/2019-02-13---lets-encrypt-nginx-subdomain/"}},"staticQueryHashes":[]}