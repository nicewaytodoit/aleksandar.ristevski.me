{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/2019-02-09---git-most-frequent-commands/","result":{"data":{"site":{"siteMetadata":{"title":"Blog & Profile by Aleksandar Ristevski","subtitle":"Any sufficiently advanced technology is indistinguishable from magic.","copyright":"All rights reserved <br> Copyright Â© 2018 - 2021","author":{"name":"Aleksandar Ristevski","twitter":"@nicewaytodoit"},"disqusShortname":"","siteUrl":"https://nicewaytodoit.github.io/aleksandar.ristevski.me"}},"markdownRemark":{"id":"5e6266a4-6b21-5627-b49b-abb565c4cd6e","html":"<p>The following list of git commands is used on a day to day bases by any developer. Some of them are more and others less frequent, but you will likely use them while working in any professional environment.</p>\n<ul>\n<li><strong><code class=\"language-text\">git init</code></strong> - it will initialize a new git environment. </li>\n<li><strong><code class=\"language-text\">git clone &lt;repo&gt;</code></strong> - it will recreate a project from the existing repository <url> regardless that being Github, Gitlab or BitBucket.</li>\n<li><strong><code class=\"language-text\">git add .</code></strong> - will add all changes from <code class=\"language-text\">working directory</code> to the <code class=\"language-text\">staging area</code> preparing all changes for committing.</li>\n<li><strong><code class=\"language-text\">git commit -m &quot;Some description&quot;</code></strong> - will move changes from the <code class=\"language-text\">staging area</code> to the local <code class=\"language-text\">repository</code>.</li>\n<li><strong><code class=\"language-text\">git push</code></strong> - will push changes to remote <code class=\"language-text\">repository</code> but if two users are working on the same branch and repositories (local and remote) are out of the sync. First we need to do <code class=\"language-text\">git pull</code> check changes and then if all issues are resolved continue with <code class=\"language-text\">git push</code>.  </li>\n<li><strong><code class=\"language-text\">git pull</code></strong> - retrieve recent changes from remote repository.</li>\n<li><strong><code class=\"language-text\">git status</code></strong> - will show the status of the current local repository.</li>\n<li>\n<p><code class=\"language-text\">git remote add &lt;remote&gt; &lt;repo_url&gt;</code> - if repo already exist but you would like to connect it with the remote repository. During cloning this is done automatically.   </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/user/repo.git</code></pre></div>\n</li>\n<li><strong><code class=\"language-text\">git log --pretty=oneline</code></strong> - will give a list of all commits in one line</li>\n<li><code class=\"language-text\">git log --pretty=&quot;%C(Yellow)%h  %C(reset)%ad (%C(Green)%cr%C(reset))%x09 %C(Cyan)%an: %C(reset)%s&quot; -10 --graph</code> - pretty version of the previous one, best if you alias it.</li>\n<li><strong><code class=\"language-text\">git blame &lt;file&gt;</code></strong> - will give info about all changes related to the specific file. </li>\n<li><strong><code class=\"language-text\">gitk</code></strong> - will give a visual representation of the repository </li>\n<li><strong><code class=\"language-text\">git checkout &lt;branch or hash&gt;</code></strong> - switch to the certain branch, or if you use hash you will go to a certain point in the history, if you use <code class=\"language-text\">git checkout HEAD</code> you will go back to the first point in history </li>\n<li><strong><code class=\"language-text\">git checkout -b &quot;new-branch&quot;</code></strong> - will create a branch and checks it out. It is frequently used to create a local branch from a remote branch made by Jira (Atlassian) in that way developer will maintain connection and status between a task s/he is working on and the code repository. </li>\n<li><strong><code class=\"language-text\">git checkout --track origin/&lt;branch&gt;</code></strong> - this is the command frequently used to create a newly-created remote branch. Additionally this command will set up-stream in the local <code class=\"language-text\">.git/config</code> file.</li>\n<li><strong><code class=\"language-text\">git reset --soft HEAD^</code></strong> - reverse current commit to the staging area (point after <code class=\"language-text\">git add .</code>). </li>\n<li><strong><code class=\"language-text\">git branch</code></strong> - listing local branches</li>\n<li><strong><code class=\"language-text\">git branch -r</code></strong> - listing remote branches </li>\n<li><strong><code class=\"language-text\">git branch -a</code></strong> - listing all branches </li>\n<li><strong><code class=\"language-text\">git branch -d &lt;branch&gt;</code></strong> - delete a local branch</li>\n<li><strong><code class=\"language-text\">git push origin --delete &lt;branch&gt;</code></strong> - delete a remote branch</li>\n<li><strong><code class=\"language-text\">git pull origin &lt;branch&gt;</code></strong> - to pull specific remote branch</li>\n</ul>","fields":{"tagSlugs":["/tags/git/","/tags/tools/","/tags/source/","/tags/development/","/tags/data/"]},"timeToRead":2,"frontmatter":{"title":"Git - most frequent commands","tags":["Git","Tools","Source","Development","Data"],"date":"2019-02-09T17:08:21.457","description":"A list of git commands is used on a day to day bases during development, some of them are more and others less frequent, but you will likely use them while working in any professional environment."}}},"pageContext":{"slug":"/posts/2019-02-09---git-most-frequent-commands/"}},"staticQueryHashes":[]}