{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx","webpack:///./src/components/Layout/index.jsx","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","_this$props","postNode","siteMetadata","disqusShortname","post","frontmatter","url","siteUrl","fields","slug","react_default","a","createElement","main_default","shortname","identifier","title","category_id","onNewComment","Component","PostTemplateDetails","data","_data$site$siteMetada","site","subtitle","author","markdownRemark","tags","tagSlugs","homeBlock","gatsby_browser_entry","className","to","tagsBlock","map","tag","i","key","commentsBlock","components_Disqus_Disqus","style","display","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","moment","format","href","twitter","target","rel","name","React","PostTemplate","_post$frontmatter","postTitle","postDescription","description","Layout","Helmet_default","content","components_PostTemplateDetails","pageQuery","children","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","defaultTitle","minutes","cups","Math","round","Array","fill","join","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e","module","exports","Object","defineProperty","value","_extends","assign","arguments","length","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","func","defaultProps","location"],"mappings":"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","file":"component---src-templates-post-template-jsx-98b5e5da8a71bc1ce8ac.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { toasts: [] };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const { state } = this;\n    const [, ...toasts] = state.toasts;\n    this.setState({ toasts });\n  }\n\n  notifyAboutComment() {\n    const { state } = this;\n    const toasts = state.toasts.slice();\n    toasts.push({ text: 'New comment available!!' });\n    this.setState({ toasts });\n  }\n\n  render() {\n    const { postNode, siteMetadata } = this.props;\n    if (!siteMetadata.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = siteMetadata.siteUrl + postNode.fields.slug;\n    return (\n      <ReactDisqusComments\n        shortname={siteMetadata.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport Disqus from '../Disqus/Disqus';\nimport { formatReadingTime } from '../../utils/helpers';\nimport './style.scss';\n\nclass PostTemplateDetails extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { subtitle, author } = data.site.siteMetadata;\n    const post = data.markdownRemark;\n    const tags = post.fields.tagSlugs;\n\n    const homeBlock = (\n      <div>\n        <Link className=\"post-single__home-button\" to=\"/\">\n          All Articles\n        </Link>\n      </div>\n    );\n\n    const tagsBlock = (\n      <div className=\"post-single__tags\">\n        <ul className=\"post-single__tags-list\">\n          {tags && tags.map((tag, i) => (\n            <li className=\"post-single__tags-list-item\" key={tag}>\n              <Link to={tag} className=\"post-single__tags-list-item-link\">\n                {post.frontmatter.tags[i]}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n\n    const commentsBlock = (\n      <div>\n        <Disqus\n          postNode={post}\n          siteMetadata={data.site.siteMetadata}\n        />\n      </div>\n    );\n\n    return (\n      <div>\n        {homeBlock}\n        <div className=\"post-single\">\n          <div className=\"post-single__inner\">\n            <h1 className=\"post-single__title\">{post.frontmatter.title}</h1>\n            <div className=\"post-single__date\">\n              <p\n                style={{\n                  // ...scale(-1 / 5),\n                  display: 'block',\n                  // marginBottom: rhythm(1),\n                  // marginTop: rhythm(-1),\n                }}\n              >\n                {post.frontmatter.date}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n            </div>\n            <div\n              className=\"post-single__body\"\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <div className=\"post-single__date\">\n              <em>\n                Published:\n                {' '}\n                {moment(post.frontmatter.date).format('D MMM YYYY')}\n              </em>\n            </div>\n          </div>\n          <div className=\"post-single__footer\">\n            {tagsBlock}\n            <hr />\n            <p className=\"post-single__footer-text\">\n              {subtitle}\n              <a\n                href={`https://twitter.com/${author.twitter}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <br />\n                <strong>{author.name}</strong>\n                {' '}\n                on Twitter\n              </a>\n            </p>\n            {commentsBlock}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostTemplateDetails;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport PostTemplateDetails from '../components/PostTemplateDetails';\n\nclass PostTemplate extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { title, subtitle } = data.site.siteMetadata;\n    const post = data.markdownRemark;\n    const { title: postTitle, description: postDescription } = post.frontmatter;\n    const description = postDescription !== null ? postDescription : subtitle;\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${postTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <PostTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n        disqusShortname\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n      }\n      timeToRead\n      frontmatter {\n        title\n        tags\n        date\n        description\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport '../../assets/scss/init.scss';\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"layout\">\n        <Helmet defaultTitle=\"Blog by Aleksandar Ristevski\" />\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/* eslint-disable import/prefer-default-export */\nexport function formatReadingTime(minutes) {\n  const cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}